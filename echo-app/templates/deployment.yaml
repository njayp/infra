apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: echo-app
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
      - name: echo-server
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: CONFIG_MESSAGE
          valueFrom:
            configMapKeyRef:
              name: {{ .Chart.Name }}-config
              key: message
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: {{ .Chart.Name }}-config
              key: environment
        volumeMounts:
        - name: config-volume
          mountPath: /config
          readOnly: true
        # Validation: Check that config exists
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - |
                if [ ! -f /config/config.json ]; then
                  echo "ERROR: Config file missing at /config/config.json"
                  exit 1
                fi
                echo "Config loaded successfully:"
                cat /config/config.json
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 3
          periodSeconds: 5
      volumes:
      - name: config-volume
        configMap:
          name: {{ .Chart.Name }}-config
